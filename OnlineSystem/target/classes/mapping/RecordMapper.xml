<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.RecordMapper" >
  <resultMap id="BaseResultMap" type="model.Record" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_name1" property="customerName1" jdbcType="VARCHAR" />
    <result column="customer_name2" property="customerName2" jdbcType="VARCHAR" />
    <result column="total_rent" property="totalRent" jdbcType="INTEGER" />
    <result column="rent1a" property="rent1a" jdbcType="INTEGER" />
    <result column="rent1b" property="rent1b" jdbcType="INTEGER" />
    <result column="rent2a" property="rent2a" jdbcType="INTEGER" />
    <result column="rent2b" property="rent2b" jdbcType="INTEGER" />
    <result column="progress" property="progress" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_name1, customer_name2, total_rent, rent1a, rent1b, rent2a, rent2b, progress
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rent_system
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rent_system
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.Record" >
    insert into rent_system (id, customer_name1, customer_name2, 
      total_rent, rent1a, rent1b, 
      rent2a, rent2b, progress
      )
    values (#{id,jdbcType=INTEGER}, #{customerName1,jdbcType=VARCHAR}, #{customerName2,jdbcType=VARCHAR}, 
      #{totalRent,jdbcType=INTEGER}, #{rent1a,jdbcType=INTEGER}, #{rent1b,jdbcType=INTEGER}, 
      #{rent2a,jdbcType=INTEGER}, #{rent2b,jdbcType=INTEGER}, #{progress,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Record" >
    insert into rent_system
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerName1 != null" >
        customer_name1,
      </if>
      <if test="customerName2 != null" >
        customer_name2,
      </if>
      <if test="totalRent != null" >
        total_rent,
      </if>
      <if test="rent1a != null" >
        rent1a,
      </if>
      <if test="rent1b != null" >
        rent1b,
      </if>
      <if test="rent2a != null" >
        rent2a,
      </if>
      <if test="rent2b != null" >
        rent2b,
      </if>
      <if test="progress != null" >
        progress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerName1 != null" >
        #{customerName1,jdbcType=VARCHAR},
      </if>
      <if test="customerName2 != null" >
        #{customerName2,jdbcType=VARCHAR},
      </if>
      <if test="totalRent != null" >
        #{totalRent,jdbcType=INTEGER},
      </if>
      <if test="rent1a != null" >
        #{rent1a,jdbcType=INTEGER},
      </if>
      <if test="rent1b != null" >
        #{rent1b,jdbcType=INTEGER},
      </if>
      <if test="rent2a != null" >
        #{rent2a,jdbcType=INTEGER},
      </if>
      <if test="rent2b != null" >
        #{rent2b,jdbcType=INTEGER},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Record" >
    update rent_system
    <set >
      <if test="customerName1 != null" >
        customer_name1 = #{customerName1,jdbcType=VARCHAR},
      </if>
      <if test="customerName2 != null" >
        customer_name2 = #{customerName2,jdbcType=VARCHAR},
      </if>
      <if test="totalRent != null" >
        total_rent = #{totalRent,jdbcType=INTEGER},
      </if>
      <if test="rent1a != null" >
        rent1a = #{rent1a,jdbcType=INTEGER},
      </if>
      <if test="rent1b != null" >
        rent1b = #{rent1b,jdbcType=INTEGER},
      </if>
      <if test="rent2a != null" >
        rent2a = #{rent2a,jdbcType=INTEGER},
      </if>
      <if test="rent2b != null" >
        rent2b = #{rent2b,jdbcType=INTEGER},
      </if>
      <if test="progress != null" >
        progress = #{progress,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Record" >
    update rent_system
    set customer_name1 = #{customerName1,jdbcType=VARCHAR},
      customer_name2 = #{customerName2,jdbcType=VARCHAR},
      total_rent = #{totalRent,jdbcType=INTEGER},
      rent1a = #{rent1a,jdbcType=INTEGER},
      rent1b = #{rent1b,jdbcType=INTEGER},
      rent2a = #{rent2a,jdbcType=INTEGER},
      rent2b = #{rent2b,jdbcType=INTEGER},
      progress = #{progress,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>